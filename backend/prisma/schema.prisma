// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id                          Int      @id @default(autoincrement())
    name                        String
    email                       String   @unique
    password                    String
    userTypeId                  Int
    userType                    UserType @relation(fields: [userTypeId], references: [id])
    tokens                      Token[]
    createdAt                   DateTime @default(now())
    userInformationInvestor     UserInformationInvestor?
    userInformationEntrepreneur UserInformationEntrepreneur?
}

model UserInformationInvestor {
    id              Int      @id @default(autoincrement())
    vc_fund         String
    areas           Area[]
    vc_rounds       VCRound[]
    wpp             String
    linkedin        String
    termsAcceptedAt DateTime @default(now())
    userId          Int      @unique
    user            User     @relation(fields: [userId], references: [id])
    createdAt       DateTime @default(now())
}

model UserInformationEntrepreneur {
    id                  Int      @id @default(autoincrement())
    has_received_vc     Boolean @default(false)
    has_been_incubated  Boolean @default(false)
    has_clients         Boolean @default(false)
    areaId              Int     @unique
    area                Area    @relation(fields: [areaId], references: [id])
    vc_roundId          Int     @unique
    vc_round            VCRound @relation(fields: [vc_roundId], references: [id])
    target_value        Int
    target_equity       Int
    wpp                 String
    linkedin            String
    termsAcceptedAt     DateTime @default(now())
    userId              Int      @unique
    user                User     @relation(fields: [userId], references: [id])
    createdAt           DateTime @default(now())
}

model Token {
    id        Int      @id @default(autoincrement())
    userId    Int
    user      User     @relation(fields: [userId], references: [id])
    token     String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserType {
    id        Int      @id @default(autoincrement())
    name      String
    users     User[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Area {
    id            Int      @id @default(autoincrement())
    name          String
    investors     UserInformationInvestor[]
    entrepreneurs UserInformationEntrepreneur[]
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
}

model VCRound {
    id            Int      @id @default(autoincrement())
    name          String
    investors     UserInformationInvestor[]
    entrepreneurs UserInformationEntrepreneur[]
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
}